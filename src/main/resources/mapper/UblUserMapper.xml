<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myTest.dao.UblUserMapper">
  <resultMap id="BaseResultMap" type="com.myTest.model.UblUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userCode" jdbcType="VARCHAR" property="usercode" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="headerUrl" jdbcType="VARCHAR" property="headerurl" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createUser" jdbcType="INTEGER" property="createuser" />
    <result column="updateUser" jdbcType="INTEGER" property="updateuser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userCode, userName, password, email, mobile, sex, headerUrl, createTime, createUser, 
    updateUser, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from UblUser
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from UblUser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myTest.model.UblUser">
    insert into UblUser (id, userCode, userName, 
      password, email, mobile, 
      sex, headerUrl, createTime, 
      createUser, updateUser, updateTime
      )
    values (#{id,jdbcType=INTEGER}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{headerurl,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createuser,jdbcType=INTEGER}, #{updateuser,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.myTest.model.UblUser">
    insert into UblUser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="usercode != null">
        userCode,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="headerurl != null">
        headerUrl,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="createuser != null">
        createUser,
      </if>
      <if test="updateuser != null">
        updateUser,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="usercode != null">
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="headerurl != null">
        #{headerurl,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myTest.model.UblUser">
    update UblUser
    <set>
      <if test="usercode != null">
        userCode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="headerurl != null">
        headerUrl = #{headerurl,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createUser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="updateuser != null">
        updateUser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myTest.model.UblUser">
    update UblUser
    set userCode = #{usercode,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      headerUrl = #{headerurl,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      createUser = #{createuser,jdbcType=INTEGER},
      updateUser = #{updateuser,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>